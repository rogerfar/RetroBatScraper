// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetroBat.Scraper.Services;

#nullable disable

namespace RetroBat.Scraper.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250426203318_Initial2")]
    partial class Initial2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("RetroBat.Scraper.Models.Game", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GameLinkData")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ScrapeResult")
                        .HasColumnType("TEXT");

                    b.Property<int>("ScrapeStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ScreenScraperData")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ScreenScraperId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GameId");

                    b.HasIndex("PlatformId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("RetroBat.Scraper.Models.Platform", b =>
                {
                    b.Property<Guid>("PlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Company")
                        .HasColumnType("TEXT");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Names")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RomType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ScreenScraperId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("PlatformId");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("RetroBat.Scraper.Models.Setting", b =>
                {
                    b.Property<Guid>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SettingId");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            SettingId = new Guid("48519a79-6a74-4a66-b10d-38308d21eb1e"),
                            Key = "RetroBatPath",
                            Type = "String",
                            Value = ""
                        },
                        new
                        {
                            SettingId = new Guid("61d393aa-448c-4bb3-a5e4-4296cf857ab2"),
                            Key = "ScreenScraperDevId",
                            Type = "String",
                            Value = ""
                        },
                        new
                        {
                            SettingId = new Guid("33d4a35b-f6cc-47c0-88dd-2c5129076442"),
                            Key = "ScreenScraperDevPassword",
                            Type = "String",
                            Value = ""
                        },
                        new
                        {
                            SettingId = new Guid("397d5efe-cf44-460c-96ad-e8869696719a"),
                            Key = "ScreenScraperUserName",
                            Type = "String",
                            Value = ""
                        },
                        new
                        {
                            SettingId = new Guid("f5529d7f-4fd4-410d-abeb-4bea86db5ccd"),
                            Key = "ScreenScraperUserPassword",
                            Type = "String",
                            Value = ""
                        });
                });

            modelBuilder.Entity("RetroBat.Scraper.Models.Game", b =>
                {
                    b.HasOne("RetroBat.Scraper.Models.Platform", "Platform")
                        .WithMany("Games")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("RetroBat.Scraper.Models.Platform", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
