// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetroBatScraper.Services;

#nullable disable

namespace RetroBat.Scraper.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("RetroBatScraper.Models.Game", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileNameWithExtension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileNameWithoutExtension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GameLinkData")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ScrapeResult")
                        .HasColumnType("TEXT");

                    b.Property<int>("ScrapeStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ScreenScraperData")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ScreenScraperId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GameId");

                    b.HasIndex("PlatformId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("RetroBatScraper.Models.Platform", b =>
                {
                    b.Property<Guid>("PlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Company")
                        .HasColumnType("TEXT");

                    b.Property<string>("Extensions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Names")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RomType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ScreenScraperId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("PlatformId");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("RetroBatScraper.Models.Setting", b =>
                {
                    b.Property<Guid>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SettingId");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            SettingId = new Guid("d1b530ac-9b86-4138-bc8a-15f0b9443c60"),
                            Key = "RetroBatPath",
                            Type = "String",
                            Value = ""
                        },
                        new
                        {
                            SettingId = new Guid("34af0c52-c50a-4152-80bc-4023480a8c56"),
                            Key = "ScreenScraperDevId",
                            Type = "String",
                            Value = ""
                        },
                        new
                        {
                            SettingId = new Guid("d09b3668-7b40-433f-aa97-f34e00b90170"),
                            Key = "ScreenScraperDevPassword",
                            Type = "String",
                            Value = ""
                        },
                        new
                        {
                            SettingId = new Guid("f15330ed-02f5-4de2-8e83-ddefd3a442f3"),
                            Key = "ScreenScraperUserName",
                            Type = "String",
                            Value = ""
                        },
                        new
                        {
                            SettingId = new Guid("12e63957-a757-4132-a495-bdce18b33e9b"),
                            Key = "ScreenScraperUserPassword",
                            Type = "String",
                            Value = ""
                        });
                });

            modelBuilder.Entity("RetroBatScraper.Models.Game", b =>
                {
                    b.HasOne("RetroBatScraper.Models.Platform", "Platform")
                        .WithMany("Games")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("RetroBatScraper.Models.Platform", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
